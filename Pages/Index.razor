@page "/"
@inject NavigationManager NavigationManager
@inject AppDbContext _context

<div class="random-video">
    @if (randomVideo is Show)
    {
        <a href="@($"show_page/{randomVideo.Id}")">
            <div class="random-video-wallpaper">
                <img src="@randomVideo.Wallpaper" alt="wallpaper" class="wallpaper-image">
                <div class="text-overlay">
                    <img src="@randomVideo.Logo" alt="logo" class="logo-image">
                </div>
                <div class="rating">
                    <p>
                        <span class="material-symbols-outlined">
                            thumb_up
                        </span>
                        @randomVideo.Rating%
                    </p>
                </div>
                <div class="description">
                    <p>@randomVideo.Description</p>
                </div>
            </div>
        </a>
    }
    else
    {
        <a draggable="false" href="@($"video_player/{randomVideo.Id}")">
            <div class="random-video-wallpaper">
                <iframe alt="wallpaper" class="wallpaper-image" id="player"></iframe>
                <div class="text-overlay">
                    <img draggable="false" src="@randomVideo.Logo" alt="logo" class="logo-image">
                </div>
                <div class="rating">
                    <p>
                        <span class="material-symbols-outlined">
                            thumb_up
                        </span>
                        @randomVideo.Rating%
                    </p>
                </div>
                <div class="description">
                    <p>@randomVideo.Description</p>
                </div>
            </div>
        </a>
    }
</div>

<div class="container">
    <a href="@NavigationManager.Uri" class="esquerda">
        <img src="logo.png" class="logo" alt="Logo">
    </a>
    <div class="direita">
        <form class="form-inline" action="search_videos" method="get">
            <div class="search-box">
                <input type="text" class="input-search" placeholder="Pesquisar" name="q">
            </div>
        </form>
    </div>
</div>

<div class="my-container">
    <br>
    <h3>Recomendado</h3>
    <div class="video-list" id="video-grid">
        @foreach (var video in videos)
        {
            <a href="@($"video_player/{video.Id}")" class="card-link" draggable="@(video is Show ? "true" : "false")">
                <div class="video-list-thumbnail">
                    <img src="@video.Thumbnail" alt="Thumbnail" draggable="false">
                </div>
            </a>
        }
    </div>
</div>

@foreach (var tagContent in contentByTags)
{
    <div class="my-container">
        <h3>@tagContent.TagName</h3>
        <div class="video-list" id="video-grid">
            @foreach (var content in tagContent.Content)
            {
                <div class="video-list-item">
                    <a href="@($"video_player/{content.Id}")" class="card-link" draggable="@(content is Show ? "true" : "false")">
                        <div class="video-list-thumbnail">
                            <img src="@content.Thumbnail" alt="Thumbnail" draggable="false" />
                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
}

@code {
    public string titulo { get; set; }
    public Video randomVideo { get; set; }
    public List<Video> videos { get; set; }
    public List<(string TagName, List<Video> Content)> contentByTags { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        // Your C# code goes here...
        // Retrieve all tags from the database
        var allTags = _context.Tags.ToList();

        // Get a random sample of tags (up to the number of available tags)
        var randomTags = allTags.OrderBy(x => Guid.NewGuid()).Take(Math.Min(5, allTags.Count)).ToList();

        // Initialize an empty list to store videos and shows for each tag
        contentByTags = new List<(string TagName, List<Video> Content)>();

        foreach (var tag in randomTags)
        {
            // Retrieve all videos and shows for the current tag
            var tagVideos = _context.Videos.Where(v => v.Tags.Contains(tag)).ToList();

            if (tagVideos.Any())
            {
                // Get a random sample of videos and shows (up to the number of available videos and shows for this tag)
                var tagContentSample = tagVideos.OrderBy(x => Guid.NewGuid()).Take(Math.Min(9, tagVideos.Count)).ToList();

                contentByTags.Add((tag.Name, tagContentSample));
            }
        }

        // Retrieve all videos and shows from the database
        var allVideos = _context.Videos.ToList();

        // Get a random sample of videos and shows (up to the number of available videos and shows)
        videos = allVideos.OrderBy(x => Guid.NewGuid()).Take(Math.Min(9, allVideos.Count)).ToList();

        // Select a random video or show from the list
        randomVideo = allVideos.OrderBy(x => Guid.NewGuid()).FirstOrDefault();

        titulo = "Em Destaque";
    }
}

